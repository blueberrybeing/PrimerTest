#!/bin/bash
# Program to output a system information page
TITLE="System Information Report"
CURRENT_TIME=$(date +"%x %r %z")
TIME_STAMP="Generated $CURRENT_TIME, by $USER"

report_uptime() {
	cat <<- _EOF_
	<H2>System Uptime</H2>
	<PRE>$(uptime)</PRE>
	_EOF_

	return	
}

report_dis_space(){
	cat <<- _EOF_
	<H2>Disk Space Utilization</H2>
	<PRE>$(df -h)</PRE>
	_EOF_
	return
}

report_home_space(){
	if [[$(id -u) -eq 0]]; then
		cat <<- _EOF_
		<H2>Home Space Utilization(All Users)</H2>
		<PRE>$(du -sh /home/*)</PRE>
		_EOF_
	else
		cat <<- _EOF_
		<H2>Home Space Utilization($USER)</H2>
		<PRE>$(du -sh $HOME)</PRE>
		_EOF_
	fi
	return
}

home_space()
{
	echo "<h2>Home directory space by user</h2>"
	echo "<pre>"
	format="%8s%10s%10s	%-s\n"
	printf "$format" "Dirs" "Files" "Blocks" "Directory"
	printf "$format" "----" "-----" "------" "---------"
	if [ $(id -u) = "0" ]; then
		dir_list="/home/*";
	else
		dir_list=$HOME
	fi

	for home_dir in $dir_list; do
		total_dirs=$(find $home_dir -type d | wc -l)
		total_files=$(find $home_dir -type f | wc -l)
		total_blocks=$(du -s $home_dir)
		printf "$format" $total_dirs $total_files $total_blocks
	done
	echo "</pre>"
}



write_page()
{
	
	cat <<- _EOF_
	<HTML>
    	  <HEAD>
        	    <TITLE>$TITLE</TITLE>
     	 </HEAD>
     	 <BODY>
	  		<H1>$TITLE</H1>
			<P>$TIME_STAMP</P>
			$(report_uptime)
			$(report_dis_space)
			$(report_home_space)
     	 </BODY>
	</HTML>
	_EOF_
}

usage()
{
	echo "usage: sysinfo_page [[[ -f file ] [ -i ]] | [-h]]"
}

interactive=
filename=~/sysinfo_page.html
while [ "$1" != "" ]; do
	case $1 in
	-f | --file ) 			shift
							filename=$1
							;;
	-i | --interactive )	interactive=1
							;;
	-h | --help )			usage
							exit
							;;
	* )						usage
							exit 1
	esac
	shift
done

# Test code to verify command line processing

if [ "$interactive" = "1" ]; then
	echo "interactive is on"
else
	echo "interactive is off"
fi
echo "output file = $filename"

if [ "$interactive" = "1" ]; then
	response=

	echo -n "Enter name of output file [$filename] > "
	read response
	if [ -n "$response" ]; then
		filename=$response
	fi

	if [ -f $filename ]; then
		echo -n "Output file exists. Overwrite?(y/n) > "
		read response
		if [ "$response" != "y" ]; then
			echo "Exiting program."
			exit 1
		fi
	fi
fi

home_space

